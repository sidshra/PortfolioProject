service: news-website

frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.9
  region: us-east-1

  iam:
    role:
      statements:
        # - Effect: Allow
        #   Action:
        #     - s3:GetObject
        #   Resource:
        #     - "arn:aws:s3:::${self:provider.environment.S3_BUCKET_NAME1}/uploads/*"
        - Effect: Allow
          Action:
            - states:StartExecution
          Resource:
            - arn:aws:states:us-east-1:339712883099:stateMachine:crawlStateMachine 
        - Effect: Allow
          Action:
            - lambda:InvokeFunction
          Resource:
            - arn:aws:lambda:us-east-1:339712883099:function:get_item    
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:GetItem
            - dynamodb:DeleteItem
            - dynamodb:Scan
          Resource: 
            - "arn:aws:dynamodb:*:*:table/EnDyDBTable"

 
  #environment:
  #  S3_BUCKET_NAME1:  'en-seidhi-thaal'



functions:
  news_crawler:
    handler: news_crawler.handler
    name: news_crawler
    timeout: 30

  check_item:
    name: check_item
    handler: check_item.handler
    timeout: 30

  create_item:
    name: create_item
    handler: create_item.handler
    timeout: 30    
    
  get_item:
    handler: get_item.handler
    name: get_item
    events:
      - http: 
          method: GET 
          path: /
         

stepFunctions:
  stateMachines:
    crawlStateMachine:
      name: crawlStateMachine
      definition:
        StartAt: news_crawler
        States:
          news_crawler:
            Type: Task
            Resource: arn:aws:lambda:us-east-1:339712883099:function:news_crawler
            Next: check_item
   
          check_item:
            Type: Task
            Resource: arn:aws:lambda:us-east-1:339712883099:function:check_item        
            Next: create_item 
         
          create_item:
            Type: Task
            Resource: arn:aws:lambda:us-east-1:339712883099:function:create_item        
            End: true
resources:
  Resources:
    MyStepFuncSchedRule:
      Type: AWS::Scheduler::Schedule
      Properties:
        ScheduleExpression: rate(670 minutes) #cron(0 17 * * ? *)
        State: ENABLED
        FlexibleTimeWindow:
          Mode: OFF
        Target:
          Arn: arn:aws:states:us-east-1:339712883099:stateMachine:crawlStateMachine
          RoleArn: arn:aws:iam::339712883099:role/service-role/Amazon_EventBridge_Scheduler_SFN_cec437bf0b
    
    EnDyDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: EnDyDBTable
        AttributeDefinitions:
          - AttributeName: date
            AttributeType: S  
          - AttributeName: section
            AttributeType: S
              
        KeySchema:
          - AttributeName: date
            KeyType: HASH
          - AttributeName: section
            KeyType: RANGE
          
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1      

plugins:
  - serverless-python-requirements
  - serverless-step-functions

# custom:
#   pythonRequirements:
#     dockerizePip: true  
